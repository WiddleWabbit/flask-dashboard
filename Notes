# Setup Commands
apt update && apt upgrade -y
apt-get install python3-pip
apt-get install git

apt-get install sqlite3
apt-get install python3-flask
apt-get install python3-flask-sqlalchemy
apt-get install python3-flask-login
apt-get install python3-apscheduler

# Run Dev App
flask --app app run

# Flask Manual Data Entry
flask shell
from app import db, Users
from werkzeug.security import generate_password_hash, check_password_hash
password='password'
hashed_password=generate_password_hash(password,method="pbkdf2:sha256")
admin_user = Users(username="admin",password=hashed_password,firstname="Nathan",lastname="Wheat",email="thewheathousehold@gmail.com")
db.session.add(admin_user)
db.session.commit()
quit()
# Check
print(admin_user.id)
# Update 
admin_user.email = 'john_doe@example.com'
db.session.add(admin_user)
db.session.commit()
# Drop all
db.drop_all()
db.create_all()

# Flask Manually Read Database
flask shell
from app import db, Users
user = Users.query.all()
user[0].email
quit()

# Handling Date/Time
from datetime import datetime
import pytz
current_time_utc = datetime.now(pytz.utc)
current_time_utc.isoformat()

# Clear Tables
from app import db, Users, Settings, Groups, Schedules, Zones, DaysOfWeek, schedule_days, zone_schedules
db.drop_all()
db.session.commit()




Settings.__table__.drop(db.engine)


class Parent(db.Model):
    __tablename__= "parents"
    
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(255))
    childrens = db.relationship("Child", backref="parents")

    # Use cascade as below to ensure the child is deleted if the parent is deleted
    childrens = db.relationship("Child", backref="parents", cascade="all, delete")

class Child(db.Model):
    __tablename__= "children"    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(255))
    parent_id = db.Column(db.Integer, db.ForeignKey("parents.id"), nullable=True)






    sch = Schedules.query.first()
    day = DaysOfWeek.query.all()    
    d = day[2]
    sch.days.append(d)